@page "/Registro"
@inject IRepositorioPelicula _repositorio
@inject NavigationManager _navigationManager
@inject ILoginService _LoginService 
@inject IMostrarMensajes _mostrarMensaje

<h3>Registro</h3>
<hr />

<EditForm Model="@userInfo" OnValidSubmit="CrearUsuario">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label>Email:</label>
        <div>
            <InputText Class="form-control" @bind-Value="@userInfo.Email" />
            <ValidationMessage For="@(() => userInfo.Email)" />
        </div>
    </div>

    <div class="form-group">
        <label>Password:</label>
        <div>
            <InputPassword Class="form-control" @bind-Value="@userInfo.Password" />
            <ValidationMessage For="@(() => userInfo.Password)" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Registrar</button>

</EditForm>


@code {

    private UserInfo userInfo = new UserInfo();

    private async Task CrearUsuario()
    {
        var httpResponse = await _repositorio.Post<UserInfo, UserToken>("api/cuentas/Crear", userInfo);

        if (httpResponse.Error)
        {
            await _mostrarMensaje.MostrarMensajesError(await httpResponse.GetBody());
        }
        else
        {
            await _LoginService.Login(httpResponse.Response);
            _navigationManager.NavigateTo("");
        }
    }
}
