@page "/usuarios"
@inject IRepositorioPelicula _repositorio
@inject IMostrarMensajes _mostrarMensajes

<h3>Indice Usuarios</h3>

<Paginacion PaginaActual="paginaActual" PaginaSeleccionada="PaginaSeleccionada" PaginasTotales="paginasTotales"></Paginacion>


<ListadoGenerico Listado="Usuarios">
    <HayRegistrosCompleto>
        <table class="table">
            <thead>
                <tr>
                    <th></th>
                    <th>Usuarios</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var usuarios in Usuarios)
                {
                    <tr>
                        <td><a href="/usuarios/editar/@usuarios.UserId" class="btn btn-success">Editar</a></td>
                        <td>@usuarios.Email</td>
                    </tr>
                }
            </tbody>
        </table>
    </HayRegistrosCompleto>
</ListadoGenerico>


@code {

    List<UsuariosDTO> Usuarios;

    private int paginaActual = 1;
    private int paginasTotales;

    protected async override Task OnInitializedAsync()
    {
       

        await Cargar();

    }

    private async Task PaginaSeleccionada(int pagina)
    {
        paginaActual = pagina;
        await Cargar(pagina);
    }

    private async Task Cargar(int pagina = 1)
    {
        var responseHTTP = await _repositorio.Get<List<UsuariosDTO>>($"api/usuarios?pagina={pagina}");

        if (responseHTTP.Error)
        {

            await _mostrarMensajes.MostrarMensajesError(await responseHTTP.GetBody());
        }
        else
        {

            paginasTotales = int.Parse(responseHTTP.HttpResponseMessage.Headers.GetValues("totalPaginas").FirstOrDefault());
            Usuarios = responseHTTP.Response;
        }
    }

}
