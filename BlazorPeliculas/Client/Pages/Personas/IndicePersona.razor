@page "/personas"
@inject IRepositorioPelicula _repositorio
@inject IMostrarMensajes _mostrarMensajes


<h3>Indice Persona</h3>
<hr />
<div class="form-group">
    <a href="personas/crear" class="btn btn-info">Crear Persona</a>
</div>


<ListadoGenerico Listado="Personas">
    <HayRegistrosCompleto>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th></th>
                    <th>Nombres</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Personas)
                {
                    <tr>
                        <td>
                            <a href="personas/editar/@item.Id" class="btn btn-success">Editar</a>
                            <button class="btn btn-danger" @onclick="(() => BorrarPersona(item))">Borrar</button>
                        </td>
                        <td>@item.Nombre</td>
                    </tr>
                }
            </tbody>
        </table>
    </HayRegistrosCompleto>
</ListadoGenerico>

@code {

    public List<Persona> Personas { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await Cargar();

    }

    private async Task Cargar()
    {
        var responseHTTP = await _repositorio.Get<List<Persona>>("api/personas");

        Personas = responseHTTP.Response;
    }

    private async Task BorrarPersona(Persona persona)
    {
        var responseHTTP = await _repositorio.Delete($"api/personas/{persona.Id}");

        if (responseHTTP.Error)
        {
            await _mostrarMensajes.MostrarMensajesError(await responseHTTP.GetBody());
        }
        else
        {
            await Cargar();
        }
    }
}

